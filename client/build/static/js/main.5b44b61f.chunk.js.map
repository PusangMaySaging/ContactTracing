{"version":3,"sources":["Assets/images/mobile.svg","Assets/images/Reading.svg","Components/Home.js","cors.js","Contexts/AuthContext.js","Components/Login.js","Components/Client/Register/StepOne.js","Components/Client/Register/StepTwo.js","Components/Client/Register/StepThree.js","Components/Client/Register/Register.js","Assets/images/social_distance.svg","Contexts/UserContext.js","Contexts/LogsNavigationContext.js","Contexts/ProfileNavState.js","Components/Client/Dashboard.js","Components/Scanner/ScannerDashboard.js","Components/Scanner/ScannerLogin.js","Contexts/ReportNavigationContext.js","Components/Admin/AdminDashboard.js","Components/Admin/AdminLogin.js","Components/Client/TravelLogs.js","Components/Header.js","Components/Admin/Reports.js","Components/Client/Profile.js","Components/Admin/Logs.js","Assets/images/loading.svg","Components/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useState","isMobileView","setMobileView","useEffect","resizeFunction","window","innerWidth","addEventListener","removeEventListener","className","to","src","mobile","alt","Reading","config","domain","AuthContext","createContext","AuthProvider","isLoading","setLoading","session","refetchSession","a","axios","get","cors","withCredentials","data","localStorage","setItem","JSON","stringify","validateAuth","Provider","value","children","Login","formData","setFormData","useContext","invalidLoginRef","useRef","handleFormData","event","target","name","prevState","post","headers","message","bool","role","current","style","display","console","log","parse","getItem","ref","htmlFor","type","onChange","required","onClick","StepOne","incrementSteps","showValid","showInvalid","email","password","confirmPassword","isFormInValidState","setFormValidState","passwordNotSameErrorRef","emailInvalidErrorRef","emailTakenErrorRef","passwordLengthErrorRef","passwordInputRef","isValidEmail","test","String","toLowerCase","onInput","length","confirmPasswordInput","arrayOfPasswordInput","e","preventDefault","StepTwo","invalidMobileNumberErrorRef","mobileNumberTakenRef","isValidMobileNumber","setValidMobileNumber","provinces","setProvinces","cities","setCities","mobileNumber","match","concatenatedMobileNumber","substring","isNotEmpty","fullname","province","city","fullAddress","someVar","getProvinces","then","response","placeholder","provinceName","getCities","map","key","StepThree","mobilecode","setCode","codeErrorMessageRef","codeInput","enteredCode","code","resp","inputs","messageTextRef","INVALID","OUTLINE","DISPLAY","Array","isArray","forEach","input","outline","showInvalid_LOCAL","Register","steps","setSteps","userFormData","VALID","prevStep","prevData","UserContext","UserProvider","qrCode","user","setUser","isMount","id","fetchUserData","LogsNavigationContext","LogsNavigationProvider","logsNavState","setlogsNavState","ProfileNavStateContext","ProfileNavStateProvider","profileNavState","setProfileNavState","Dashboard","setLoadingClass","fetchSession","setLogsNavState","HeroImg","size","ScannerDashboard","findScan","setScan","facingMode","setFacingMode","room","scannerMessageRef","location","innerText","setTimeout","pathname","handleFacingMode","unmount","username","onScan","result","sendData","facingmode","onError","error","ScannerLogin","ReportsNavigationContext","ReportsNavigationProvider","reportsNavState","setReportsNavState","AdminDashboard","roomFormClass","setRoomFormClass","scannerFormClass","setScannerFormClass","roomFormData","setRoomFormData","scannerFormData","setScannerFormData","rooms","setRooms","lastAddedRoom","setLastAddedRoom","dashboardRef","closeCreateRoomForm","removeOpacity","closeScannerForm","addOpacity","opacity","handleScannerFormData","fetchRooms","onSubmit","_id","AdminLogin","reFetchSession","TravelLogList","setLastReported","setLogState","reportModalClass","setReportModalClass","report","logId","time","day","month","isReported","TravelLogs","lastReported","travelLogs","setTravelLogs","fetchTravelLogs","index","Header","removeItem","Report","reporter","reportText","Reports","reports","setReports","fetchReports","GeneralInfoModal","Class","setGeneralInfoModal","citySelectBox","patch","hide","MobilePhoneModal","setMobileInfoModal","mobileInfoModalClass","setStep","newMobileNumber","setNewMobileNumber","invalidCodeErrorRef","codeTextBox","put","PasswordModal","setPasswordInfoModal","isOldPasswordCorrect","isNewPasswordValid","isValidPasswords","setValidPasswords","oldPassword","setOldPassword","newPassword","setNewPassword","passwordIsWeakRef","passwordNotSameRef","incorrectOldPasswordRef","newPasswordInputRef","onBlur","Profile","generalInfoModal","mobileInfoModal","passwordInfoModal","userId","Logs","Date","dateFilter","setDateFilter","selectedRoom","setSelectedRoom","fetchAllLogs","fetchFilteredLogs","selected","date","Loading","loading","App","loadingClass","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b44b61f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mobile.41ed055e.svg\";","export default __webpack_public_path__ + \"static/media/Reading.1c6d3bd8.svg\";","import React,{useEffect,useState} from 'react';\r\nimport '../Assets/home.css'\r\nimport mobile from '../Assets/images/mobile.svg'\r\nimport Reading from '../Assets/images/Reading.svg'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Home(props) {\r\n\r\n    const [isMobileView, setMobileView] = useState(true);\r\n\r\n    useEffect(() => {\r\n\r\n        function resizeFunction(){\r\n           \r\n            if(window.innerWidth >= 810){\r\n                setMobileView(false)\r\n            }\r\n            else{\r\n                setMobileView(true)\r\n            }\r\n        }\r\n        window.addEventListener('resize',resizeFunction)\r\n        return ()=>{\r\n            window.removeEventListener('resize',resizeFunction)\r\n        }\r\n    },[])\r\n    return (\r\n        <>\r\n        <header className=\"home-header\">\r\n                <span className=\"blue-clr\">Campus</span>\r\n            </header>\r\n        <div className=\"home\">\r\n            <div className=\"section-1\">\r\n            <div className=\"section-wrapper\">\r\n            <div className=\"home-texts\">\r\n            <div className=\"home-title\">\r\n              <span className=\"yl-clr\">Welcome! Student</span>\r\n            </div>\r\n            <div className=\"home-subtitle\">\r\n              <span className=\"blue-clr\">You can now easily access school facilities using this web application. We monitor your movement in school campus to make sure you are safe and informed.</span>\r\n            </div>\r\n            </div>\r\n           \r\n            <div className=\"CTA\">\r\n                <Link to=\"/signin\" className=\"blue-bg default-clr\">Sign In </Link>\r\n                <Link to=\"signup\" className=\"cta-border blue-clr\">Sign Up</Link>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"section-2\">\r\n\r\n                {isMobileView && window.innerWidth < 810 ? (\r\n                <img src={mobile} alt=\"background\"></img>):(\r\n                <img src={Reading} alt=\"person\" className=\"illustration\" ></img>)\r\n                 }\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","\r\nconst config = {\r\n  domain: 'http://localhost:5000',\r\n //domain:'https://campus-contact-tracing.herokuapp.com'\r\n}\r\nexport default config","import React,{ useState,createContext,useEffect}from 'react';\r\nimport axios from 'axios'\r\nimport cors from '../cors'\r\n\r\nexport const AuthContext = createContext()\r\n\r\n\r\nexport const AuthProvider = (props) => {\r\n\r\n    const [isLoading,setLoading] = useState(true)\r\n    const [session,refetchSession] = useState(1);\r\n    useEffect(() => {\r\n        async function validateAuth(){\r\n            const {data} = await axios.get(`${cors.domain}/Auth`,{withCredentials:true});\r\n            localStorage.setItem('auth',JSON.stringify(data))\r\n        }\r\n        validateAuth()\r\n        setLoading(false)\r\n       \r\n    },[session])\r\n    \r\n    return (\r\n            <AuthContext.Provider value={[session,refetchSession]}>\r\n                {\r\n                    !isLoading ? props.children : <></>\r\n                }\r\n            </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n","import React, { useState,useContext,useEffect,useRef } from \"react\";\r\nimport \"../Assets/form.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {AuthContext} from '../Contexts/AuthContext'\r\nimport cors from '../cors'\r\n\r\nfunction Login({}) {\r\n \r\n  const [formData, setFormData] = useState({});\r\n  const [session,refetchSession] = useContext(AuthContext)\r\n  const invalidLoginRef = useRef();\r\n  function handleFormData(event) {\r\n    const { name, value } = event.target;\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }\r\n  async function sendFormData() {\r\n    try {\r\n      const response = await axios.post(`${cors.domain}/signin`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n         // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      if (response.data.message === \"OK\") {\r\n        localStorage.setItem('auth',JSON.stringify({bool:true,role:\"Client\"}))\r\n        refetchSession(prevState=> prevState + 1);\r\n      } \r\n      else {\r\n          invalidLoginRef.current.style.display = \"inline\"\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n    return (\r\n     !JSON.parse(localStorage.getItem('auth')).bool && JSON.parse(localStorage.getItem('auth')).role !== \"Client\" ? (\r\n      <div className=\"sign-in\">\r\n        <div className=\"form-wrapper\">\r\n          <div className=\"form-title\">\r\n            <span>Sign In</span>\r\n          </div>\r\n          <form className=\"form-form\">\r\n          <span className=\"error-message warn\" ref={invalidLoginRef}>\r\n                Invalid Username or Password\r\n              </span>\r\n            <div className=\"input-wrapper\">\r\n              <label className=\"\" htmlFor=\"email\">\r\n                Email or Mobile Number\r\n            </label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"username\"\r\n                className=\"input signin-input bg1\"\r\n                onChange={handleFormData}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n              <label className=\"\" htmlFor=\"email\">\r\n                Password\r\n            </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className=\"input signin-input bg1\"\r\n                onChange={handleFormData}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div className=\"no-account\">\r\n              <Link to=\"/signup\">Don't have an account? Sign Up</Link>\r\n            </div>\r\n            <div className=\"btn-wrapper\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={sendFormData}\r\n                className=\"btn signin-btn blue-bg default-clr\"\r\n              >\r\n                Sign In\r\n            </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      ) : (<Redirect to=\"/dashboard\"></Redirect>)\r\n    );\r\n  \r\n}\r\n\r\nexport default Login;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport cors from '../../../cors'\r\nfunction StepOne({ handleFormData, incrementSteps, showValid, showInvalid }) {\r\n  const [isFormInValidState, setFormValidState] = useState({\r\n    email: false,\r\n    password: false,\r\n    confirmPassword: false,\r\n  });\r\n\r\n  function proceedToStepTwo(e) {\r\n    e.preventDefault();\r\n    if (\r\n      isFormInValidState.email &&\r\n      isFormInValidState.password &&\r\n      isFormInValidState.confirmPassword\r\n    ) {\r\n      incrementSteps();\r\n    }\r\n  }\r\n  const passwordNotSameErrorRef = useRef(); //error message , span element\r\n  const emailInvalidErrorRef = useRef(); //error message, span element\r\n  const emailTakenErrorRef = useRef(); //error message, span element\r\n  const passwordLengthErrorRef = useRef(); //error message , span element\r\n\r\n  const passwordInputRef = useRef(); //password input, input element\r\n  function validateIfPasswordsAreSame(event) {\r\n    const confirmPasswordInput = event.target;\r\n    let arrayOfPasswordInput = [confirmPasswordInput, passwordInputRef.current];\r\n\r\n    if (passwordInputRef.current.value === confirmPasswordInput.value) {\r\n      showValid(arrayOfPasswordInput, passwordNotSameErrorRef);\r\n      setFormValidState((prevState) => ({\r\n        ...prevState,\r\n        confirmPassword: true,\r\n      }));\r\n    } else {\r\n      showInvalid(arrayOfPasswordInput, passwordNotSameErrorRef);\r\n      setFormValidState((prevState) => ({\r\n        ...prevState,\r\n        confirmPassword: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  function validatePasswordLength(event) {\r\n    const password = event.target.value;\r\n    if (password.length >= 8) {\r\n      showValid(event, passwordLengthErrorRef);\r\n      setFormValidState((prevState) => ({\r\n        ...prevState,\r\n        password: true,\r\n      }));\r\n    } else {\r\n      showInvalid(event, passwordLengthErrorRef);\r\n      setFormValidState((prevState) => ({\r\n        ...prevState,\r\n        password: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  async function validateEmail(event) {\r\n    let email = event.target.value;\r\n    showValid(event, emailTakenErrorRef);\r\n    if (isValidEmail(email)) {\r\n      showValid(event, emailInvalidErrorRef);\r\n      setFormValidState((prevState) => ({\r\n        ...prevState,\r\n        email: true,\r\n      }));\r\n      const response = await axios.post(\r\n        `${cors.domain}/validateEmailIfTaken`,\r\n        { email: email }\r\n      );\r\n      if (response.data) {\r\n        showInvalid(event, emailTakenErrorRef);\r\n        setFormValidState((prevState) => ({\r\n          ...prevState,\r\n          email: false,\r\n        }));\r\n      }\r\n    } else {\r\n      showInvalid(event, emailInvalidErrorRef);\r\n      setFormValidState((prevState) => ({\r\n        ...prevState,\r\n        email: false,\r\n      }));\r\n    }\r\n    function isValidEmail(email) {\r\n      const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      return emailRegex.test(String(email).toLowerCase());\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"sign-up\">\r\n        <ol className=\"steps\">\r\n          <li className=\"stepOne blue-bg default-clr active\">1. Account</li>\r\n          <li className=\"stepTwo\">2. Information</li>\r\n          <li className=\"stepThree\">3. Confirmation</li>\r\n        </ol>\r\n        <div className=\"form-wrapper\">\r\n          <div className=\"form-title\">\r\n            <span>Let's setup your user account details</span>\r\n          </div>\r\n\r\n          <form className=\"form-form\">\r\n            <div className=\"input-wrapper\">\r\n              <label className=\"\" htmlFor=\"email\">\r\n                Email\r\n              </label>\r\n\r\n              <input\r\n                type=\"email\"\r\n                onChange={handleFormData}\r\n                onInput={validateEmail}\r\n                className=\"input signin-input bg1\"\r\n                name=\"email\"\r\n                required\r\n              ></input>\r\n              <span className=\"error-message\" ref={emailTakenErrorRef}>\r\n                Email already taken\r\n              </span>\r\n              <span className=\"error-message\" ref={emailInvalidErrorRef}>\r\n                Invalid email address\r\n              </span>\r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n              <label className=\"\" htmlFor=\"email\">\r\n                Password\r\n              </label>\r\n\r\n              <input\r\n                type=\"password\"\r\n                onChange={handleFormData}\r\n                onInput={validatePasswordLength}\r\n                ref={passwordInputRef}\r\n                className=\"input signin-input  bg1\"\r\n                name=\"password\"\r\n                required\r\n              ></input>\r\n\r\n              <span className=\"error-message\" ref={passwordLengthErrorRef}>\r\n                Password must be atleast 8 characters\r\n              </span>\r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n              <label className=\"\" htmlFor=\"email\">\r\n                Confirm password\r\n              </label>\r\n\r\n              <input\r\n                type=\"password\"\r\n                onInput={validateIfPasswordsAreSame}\r\n                className=\"input signin-input bg1\"\r\n                name=\"confirmPassword\"\r\n                required\r\n              ></input>\r\n\r\n              <span className=\"error-message\" ref={passwordNotSameErrorRef}>\r\n                Passwords did not match\r\n              </span>\r\n            </div>\r\n            <div className=\"have-account\">\r\n              <Link to=\"/signin\">Already have an account? Sign In</Link>\r\n            </div>\r\n            <div className=\"btn-wrapper\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn blue-bg default-clr\"\r\n                onClick={proceedToStepTwo}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StepOne;\r\n","import React, { useEffect, useState, useRef, } from 'react';\r\nimport axios from 'axios';\r\nimport cors from  '../../../cors'\r\n\r\nfunction StepTwo({ handleFormData, formData, incrementSteps, showValid, showInvalid }) {\r\n\r\n    const invalidMobileNumberErrorRef = useRef(); //span error message\r\n    const mobileNumberTakenRef = useRef();// span error message\r\n    const [isValidMobileNumber, setValidMobileNumber] = useState(false);\r\n\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [cities, setCities] = useState([])\r\n\r\n    useEffect(() => {\r\n        //fetch provinces and fill <Select> with <option> of provinces\r\n        async function getProvinces() {\r\n            const data = await axios.get(`${cors.domain}/philippines/provinces`)\r\n            return data;\r\n        }\r\n        getProvinces().then(response => {\r\n            setProvinces(response.data);\r\n        })\r\n    }, [])\r\n\r\n    function getCitiesByProvince(event) {\r\n        //if province is selected fill <Select> with <option> of cities\r\n        let provinceName = event.target.value;\r\n        async function getCities() {\r\n            const response = await axios.get(`${cors.domain}/philippines/provinces/cities/${provinceName}`)\r\n            setCities(response.data)\r\n            handleFormData(event)\r\n        }\r\n        getCities();\r\n    }\r\n\r\n    async function validateMobileNumber(event) {\r\n        let mobileNumber = event.target.value;\r\n        let mobileRegexPattern = \"^(09|\\\\+639)\\\\d{9}$\"\r\n        showValid(event, mobileNumberTakenRef)\r\n\r\n        if (mobileNumber.match(mobileRegexPattern)) {\r\n            showValid(event, invalidMobileNumberErrorRef)\r\n            setValidMobileNumber(true);\r\n            const response = await axios.post(`${cors.domain}/validateMobileNumberIfTaken`, { mobileNumber: mobileNumber })\r\n            if (response.data) {\r\n                showInvalid(event, mobileNumberTakenRef)\r\n            }\r\n\r\n        }\r\n        else {\r\n            showInvalid(event, invalidMobileNumberErrorRef)\r\n            setValidMobileNumber(false)\r\n            if (event.target.value.length > 11) {\r\n                let concatenatedMobileNumber = event.target.value.substring(0, 11);\r\n                event.target.value = concatenatedMobileNumber;\r\n                setValidMobileNumber(true)\r\n                showInvalid(event, invalidMobileNumberErrorRef);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    async function proceedToStepThree(event) {\r\n        event.preventDefault();\r\n        if (isValidMobileNumber\r\n            && isNotEmpty(formData.fullname)\r\n            && isNotEmpty(formData.province)\r\n            && isNotEmpty(formData.city)\r\n            && isNotEmpty(formData.fullAddress)\r\n        ) {\r\n            const {data} = await axios.post(`${cors.domain}/createVerification`, { mobileNumber: formData.mobileNumber });\r\n            \r\n            incrementSteps()\r\n        }\r\n    }\r\n    function isNotEmpty(someVar) {\r\n        return someVar.length > 0 ? true : false;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"sign-up form-height\">\r\n                <ol className=\"steps\">\r\n                    <li className=\"stepOne\">1. Account</li>\r\n                    <li className=\"stepTwo blue-bg default-clr active\">2. Information</li>\r\n                    <li className=\"stepThree\">3. Confirmation</li>\r\n                </ol>\r\n                <div className=\"form-wrapper\">\r\n                    <div className=\"form-title\">\r\n                        <span>Setup Personal Information</span></div>\r\n                    <form className=\"form-form\">\r\n                        <div className=\"input-wrapper\">\r\n                            <label className=\"\" htmlFor=\"email\">Fullname</label>\r\n                            <input type=\"name\" onChange={handleFormData} className=\"input signin-input bg1\" name=\"fullname\" required></input>\r\n                        </div>\r\n                        <div className=\"input-wrapper\">\r\n                            <label className=\"\" htmlFor=\"email\">Mobile number</label>\r\n                            <input type=\"number\" className=\"input bg1\" onInput={validateMobileNumber} onChange={handleFormData} name=\"mobileNumber\" placeholder=\"09XX XXX XXXX\"></input>\r\n                            <span className=\"error-message\" ref={mobileNumberTakenRef}>Mobile Number already taken</span>\r\n                            <span className=\"error-message\" ref={invalidMobileNumberErrorRef}>Invalid mobile number</span>\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"input-wrapper\">\r\n                            <label className=\"\" htmlFor=\"email\">Province</label>\r\n                            <select className=\"bg1\" onChange={getCitiesByProvince} name=\"province\">\r\n                                <option value=\"\">Select Province</option>\r\n                                {\r\n                                    provinces.map(province => {\r\n                                        return <option value={province.name} key={province.key}>{province.name}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-wrapper\">\r\n                            <label className=\"\" htmlFor=\"email\">City</label>\r\n                            <select className=\"bg1\" onChange={handleFormData} name=\"city\">\r\n                                <option value=\"\">Select City</option>\r\n                                {\r\n                                    cities.map((city, key) => {\r\n                                        return <option value={city.name + \" City\"} key={key}>{city.name + \" City\"}</option>\r\n                                    }\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-wrapper\">\r\n                            <label className=\"\" htmlFor=\"email\">Detailed address</label>\r\n                            <textarea className=\"bg1\" onChange={handleFormData} name=\"fullAddress\"></textarea>\r\n                        </div>\r\n                        <div className=\"btn-wrapper\">\r\n                            <button type=\"submit\" className=\"btn blue-bg default-clr\" onClick={proceedToStepThree}>Next</button>\r\n                        </div>\r\n                        <div className=\"btn-wrapper\">\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StepTwo;","import React,{useState,useRef} from 'react';\r\nimport axios from 'axios'\r\nimport cors from '../../../cors'\r\nfunction StepThree({formData,showValid,incrementSteps}) {\r\n\r\n    const [mobilecode,setCode] = useState();\r\n    const codeErrorMessageRef = useRef()\r\n    const codeInput = useRef();\r\n\r\n    function handleCode(event){\r\n        setCode(event.target.value)\r\n        showValid(event,codeErrorMessageRef)\r\n    }   \r\n    \r\n\r\n    \r\n    function verify(event){\r\n        event.preventDefault()\r\n        axios.post(`${cors.domain}/verify`,{code:mobilecode,mobileNumber:formData.mobileNumber}).then(resp=>{\r\n            if(resp.data === \"VERIFIED\"){\r\n                axios.post(`${cors.domain}/signup`,formData).then((resp)=>{\r\n                   incrementSteps();\r\n                })\r\n            }\r\n            else{\r\n                showInvalid_LOCAL(codeInput.current,codeErrorMessageRef);\r\n            }\r\n        });\r\n\r\n        function showInvalid_LOCAL(inputs,messageTextRef){\r\n            const INVALID = {\r\n                OUTLINE:'2px solid #db5248', \r\n                DISPLAY:\"inline\"\r\n            }\r\n            if(Array.isArray(inputs)){\r\n                inputs.forEach(input => { \r\n                  input.style.outline = INVALID.OUTLINE //MAKE EVERY ELEMENT OUTLINE RED\r\n                });\r\n            }\r\n            else{\r\n                inputs.style.outline = INVALID.OUTLINE\r\n            }\r\n            messageTextRef.current.style.display = INVALID.DISPLAY // DISPLAY ERROR MESSAGE\r\n        }\r\n    }\r\n \r\n    function validateLengthOfCode(event){\r\n        let enteredCode = event.target;\r\n        if(enteredCode.value.length > 6){\r\n            enteredCode.value = enteredCode.value.substring(0,6);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n        <div className=\"sign-up\">\r\n        <ol className=\"steps\">\r\n            <li className=\"stepOne\">1. Account</li>\r\n            <li className=\"stepTwo\">2. Information</li>\r\n            <li className=\"stepThree blue-bg default-clr active\">3. Confirmation</li>\r\n        </ol>     \r\n       <div className=\"form-wrapper\">\r\n       <div className=\"form-title\">\r\n           <span>Please enter 6-digit code we have sent to your mobile number.</span></div>\r\n   <form className=\"form-form\">\r\n   <div className=\"input-wrapper\">\r\n       <label className=\"\" htmlFor=\"email\">6 - Digit Code</label>\r\n       <input type=\"number\" ref={codeInput} className=\"input signin-input input-code bg1\" onChange={handleCode} name=\"code\"  onInput={validateLengthOfCode} required></input>\r\n       <span className=\"error-message\" ref={codeErrorMessageRef}>You entered a wrong code</span>\r\n   </div>\r\n   <div className=\"btn-wrapper\">\r\n   <button type=\"submit\" className=\"btn blue-bg default-clr\" onClick={verify}>Confirm</button>\r\n   </div>\r\n   </form>\r\n   </div>\r\n   </div>\r\n   </div>\r\n    );\r\n}\r\n\r\nexport default StepThree;","import React, {useState} from 'react';\r\nimport '../../.././Assets/form.css'\r\nimport StepOne from './StepOne'\r\nimport StepTwo from './StepTwo'\r\nimport StepThree from './StepThree'\r\nimport {Redirect} from 'react-router-dom'\r\nfunction Register(props) {\r\n\r\n    const [steps,setSteps] = useState(1);\r\n    const [userFormData,setFormData] = useState();\r\n\r\n    function showValid(inputs,messageTextRef){\r\n        const VALID = {\r\n            OUTLINE:'2px solid #6BD382',\r\n            DISPLAY:\"NONE\"\r\n        }\r\n        if(Array.isArray(inputs)){ //check if element is an array\r\n            inputs.forEach(input => { \r\n              input.style.outline = VALID.OUTLINE //MAKE EVERY <input> OUTLINE GREEN\r\n            });\r\n        }\r\n        else{\r\n            inputs.target.style.outline = VALID.OUTLINE\r\n        }\r\n        messageTextRef.current.style.display = VALID.DISPLAY // REMOVE ERROR MESSAGE\r\n    }\r\n    \r\n    function showInvalid(inputs,messageTextRef){\r\n        const INVALID = {\r\n            OUTLINE:'2px solid #db5248', \r\n            DISPLAY:\"inline\"\r\n        }\r\n        if(Array.isArray(inputs)){\r\n            inputs.forEach(input => { \r\n              input.style.outline = INVALID.OUTLINE //MAKE EVERY <input> OUTLINE RED\r\n            });\r\n        }\r\n        else{\r\n            inputs.target.style.outline = INVALID.OUTLINE\r\n        }\r\n        messageTextRef.current.style.display = INVALID.DISPLAY // DISPLAY ERROR MESSAGE\r\n    }\r\n    \r\n    function incrementSteps(){\r\n        setSteps(prevStep => prevStep + 1);\r\n    }\r\n    function handleFormData(e){\r\n        const {name,value} = e.target;\r\n        setFormData(prevData=>({\r\n            ...prevData,\r\n            [name]:value\r\n        }))\r\n       \r\n    }\r\n  \r\n    switch(steps){\r\n        case 1: \r\n        return <StepOne handleFormData={handleFormData} showValid={showValid} showInvalid={showInvalid} incrementSteps={incrementSteps}></StepOne>\r\n        case 2:\r\n        return <StepTwo handleFormData={handleFormData} showValid={showValid} showInvalid={showInvalid}  incrementSteps={incrementSteps} formData={userFormData} > </StepTwo>\r\n        case 3:\r\n        return <StepThree formData={userFormData} showValid={showValid} incrementSteps={incrementSteps} ></StepThree>\r\n        default:\r\n        return <Redirect to=\"/signin\"></Redirect>\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Register;","export default __webpack_public_path__ + \"static/media/social_distance.2b4f227f.svg\";","import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from './AuthContext'\r\nimport axios from 'axios'\r\nimport cors from '../cors'\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = (props) => {\r\n\r\n    const [isLoading,setLoading] = useState(true);\r\n    const [session, fetchSession] = useContext(AuthContext);\r\n    const [user, setUser] = useState({\r\n        name: \"NULL\",\r\n        qrCode: \"NULL\",\r\n        fullAddress:\" \"\r\n    });\r\n   \r\n    useEffect(() => {\r\n        let isMount = true;\r\n        async function fetchUserData() {\r\n            const { data } = await axios.post(`${cors.domain}/user`, {}, { withCredentials: true });\r\n            localStorage.setItem('userId',JSON.stringify({id:data.id}))\r\n            if(isMount){\r\n          \r\n            setUser(data);\r\n            }\r\n        }\r\n        \r\n        fetchUserData();\r\n        setLoading(false);\r\n       \r\n        return ()=>{\r\n            isMount = false;\r\n        }\r\n    }, [session])\r\n\r\n\r\n    return (\r\n        <UserContext.Provider value={[user, setUser]}>\r\n            {\r\n                !isLoading ? (props.children):<></>\r\n            }\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nexport default UserContext;","import React,{createContext, useState}from 'react';\r\n\r\n\r\n\r\nexport const LogsNavigationContext = createContext()\r\nexport const LogsNavigationProvider = (props) => {\r\n    const [logsNavState, setlogsNavState] = useState(false); // false if close\r\n    return (\r\n       <LogsNavigationContext.Provider value={[logsNavState, setlogsNavState]}>\r\n           {props.children}\r\n       </LogsNavigationContext.Provider>\r\n    );\r\n};\r\n\r\nexport default LogsNavigationContext;","import React,{useState, createContext} from 'react';\r\n\r\nexport const ProfileNavStateContext = createContext();\r\nexport const ProfileNavStateProvider = (props) => {\r\n    const [profileNavState,setProfileNavState] = useState(false);\r\n\r\n    return (\r\n        <ProfileNavStateContext.Provider value={[profileNavState,setProfileNavState]}>\r\n            {props.children}\r\n        </ProfileNavStateContext.Provider>\r\n    );\r\n};\r\n\r\n","import React, { useEffect, useState,useContext} from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport QRCode from 'qrcode.react'\r\nimport axios from 'axios'\r\nimport HeroImg from '../../Assets/images/social_distance.svg'\r\nimport {UserContext} from '../../Contexts/UserContext'\r\nimport {AuthContext} from '../../Contexts/AuthContext'\r\nimport {LogsNavigationContext} from '../../Contexts/LogsNavigationContext'\r\nimport {ProfileNavStateContext} from '../../Contexts/ProfileNavState'\r\nimport cors from '../../cors'\r\nfunction Dashboard({setLoadingClass}) {\r\n\r\n    const [user,setUser] = useContext(UserContext)\r\n    const [session,fetchSession] = useContext(AuthContext)\r\n    const [logsNavState,setLogsNavState] = useContext(LogsNavigationContext)\r\n    const [profileNavState,setProfileNavState] = useContext(ProfileNavStateContext)\r\n\r\n        async function generateQrCode(){\r\n            setLoadingClass('loading-wrapper')\r\n            try{\r\n            const {data} = await axios.post(`${cors.domain}/client/generateQR`,{id:user.id},{withCredentials: true})\r\n            setLoadingClass('hide')\r\n            if(data === \"OK\"){\r\n                fetchSession(prevState => prevState + 1);\r\n            } \r\n\r\n            }catch(error){\r\n                console.log(error);\r\n            }\r\n        }   \r\n\r\n\r\n        if(logsNavState){\r\n            return <Redirect to=\"/dashboard/logs\"></Redirect>\r\n        }\r\n        if(profileNavState){\r\n            return <Redirect to=\"/dashboard/profile\"></Redirect>\r\n        }\r\n\r\n        return (\r\n          JSON.parse(localStorage.getItem('auth')).bool && JSON.parse(localStorage.getItem('auth')).role === \"Client\" ? (\r\n            <div className=\"dashboard\">\r\n                <div className=\"hero\">\r\n                    <div className=\"hero-text\">\r\n                        <span className=\"text\">Welcome <br/>{user.name}</span>\r\n                    </div>\r\n                    <div className=\"hero-image\">\r\n                        <img src={HeroImg} alt=\"social_distance\"></img>\r\n                    </div>\r\n                </div>\r\n                <div className=\"db-menu\">\r\n                    <div className=\"menu-selection bg1\" onClick={()=>{setLogsNavState(true)}}><span>View Travel logs</span></div>\r\n                    <div className=\"menu-selection bg1\" onClick={()=>{setProfileNavState(true)}}><span>My Profile</span></div>\r\n                </div>\r\n                <div className=\"qr\">\r\n                    <span className=\"title\">Scan Here</span>\r\n                    <div className=\"qr-code\">\r\n                    <QRCode value={user.qrCode} size={190}/>\r\n                    </div>\r\n                 <div className=\"desc-wrapper\"> <span className=\"desc-text \">You can screenshot the QR code if you are going out without internet connection. Just make sure you won’t share it with others.</span></div>  \r\n                 <div className=\"generate\"><button type=\"button\" onClick={generateQrCode} className=\"generate-btn blue-bg default-clr btn\" >Generate New QR Code</button></div>  \r\n                </div>\r\n                <div className=\"create-org\">\r\n                    \r\n                </div>\r\n                \r\n              \r\n            </div>\r\n          ) : (<Redirect to='/'></Redirect>)\r\n        );\r\n\r\n    \r\n}\r\n\r\nexport default Dashboard;","import React, { useState, useEffect,useRef,useContext} from 'react';\r\nimport QrReader from 'react-qr-reader';\r\n\r\nimport { Redirect } from 'react-router-dom'\r\nimport  {AuthContext} from '../../Contexts/AuthContext'\r\nimport axios from 'axios';\r\nimport cors from '../../cors'\r\n\r\n\r\n\r\nfunction ScannerDashboard({  }) {\r\n    const [findScan, setScan] = useState(false)\r\n    const [session,fetchSession] = useContext(AuthContext)\r\n    const [facingMode,setFacingMode] = useState('environment')\r\n\r\n    const [user, setUser] = useState({\r\n        room: \"NONE\"\r\n    });\r\n    function handleError(error) {\r\n        console.log(error)\r\n    }\r\n    function handleHandleScan(result) {\r\n        if (result !== null && findScan === false) {\r\n            setScan(true);\r\n            sendData(result);\r\n        }\r\n    }\r\n    const scannerMessageRef = useRef();\r\n    async function sendData(qrCode) {\r\n        const {data} = await axios.post(`${cors.domain}/room/createlog`, { qrCode: qrCode,location:user.room})\r\n        if(data === \"OK\"){\r\n            scannerMessageRef.current.innerText= \"QR CODE SUCCESSFULLY SCANNED\"\r\n            setTimeout(()=>{\r\n                if(window.location.pathname === '/org/Scanner'){\r\n                    setScan(false);\r\n                    scannerMessageRef.current.innerText= \"Ready to Scan Again\"\r\n                }\r\n                \r\n            },3000)\r\n        }\r\n    }\r\n    function handleFacingMode(event){\r\n      setFacingMode(event.target.value)\r\n    }\r\n    useEffect(() => {\r\n      \r\n        let unmount = false;\r\n        async function fetchUserData() {\r\n            try{\r\n            const { data } = await axios.post(`${cors.domain}/user`, {}, { withCredentials: true })\r\n            if (!unmount) setUser(data)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchUserData()\r\n        return () => {\r\n            unmount = true\r\n        }\r\n    }, [session]);\r\n\r\n\r\n\r\n        return (\r\n            JSON.parse(localStorage.getItem('auth')).bool && JSON.parse(localStorage.getItem('auth')).role === \"Scanner\"  ? (\r\n            <div className=\"scanner-db\">\r\n                <div className=\"scanner-info\">\r\n                    <span className=\"org\">{user.room}</span><br></br>\r\n                    <span className=\"username\">{user.username}</span>\r\n                </div>\r\n                <div className=\"scanner-wrapper\">\r\n                    <span ref={scannerMessageRef}>Ready to Scan</span>\r\n                    <QrReader\r\n                        onScan={handleHandleScan}\r\n                        facingmode={facingMode}\r\n                        onError={handleError}\r\n                        className=\"scanner\"\r\n                        \r\n                    ></QrReader>\r\n                    <div className=\"\"></div>\r\n                </div>\r\n                <div className=\"select-wrapper\">\r\n                <div className=\"input-wrapper\">\r\n                    <select className=\"bg1\" onChange={handleFacingMode}>\r\n                        <option onChange={handleFacingMode}>Select Facing Mode</option>\r\n                        <option value=\"environment\">Front</option>\r\n                        <option value=\"user\">Rear</option>\r\n                    </select>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            ): (<Redirect to=\"/\"></Redirect>)\r\n        );\r\n}\r\n\r\nexport default ScannerDashboard;","import React, { useState,useContext,useRef} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {AuthContext} from '../../Contexts/AuthContext'\r\nimport cors from '../../cors'\r\n\r\nfunction ScannerLogin() {\r\n  const [session,refetchSession] = useContext(AuthContext)  \r\n  const [formData, setFormData] = useState({});\r\n\r\n  const invalidLoginRef = useRef();\r\n  function handleFormData(event) {\r\n    const { name, value } = event.target;\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }\r\n  async function sendFormData() {\r\n    try {\r\n       \r\n      const response = await axios.post(`${cors.domain}/room/signin`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      if (response.data.message === \"OK\") {\r\n        localStorage.setItem('auth',JSON.stringify({bool:true,role:\"Scanner\"}))\r\n        refetchSession(prevState=> prevState + 1);\r\n      }\r\n      else {\r\n        invalidLoginRef.current.style.display = \"inline\"\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n\r\n    return (\r\n      !JSON.parse(localStorage.getItem('auth')).bool && JSON.parse(localStorage.getItem('auth')).role !== \"Scanner\" ? (\r\n      <div className=\"sign-in\">\r\n        <div className=\"form-wrapper\">\r\n          <div className=\"form-title\">\r\n            <span>QR Scanner</span>\r\n          </div>\r\n          <form className=\"form-form\">\r\n          <span className=\"error-message warn\" ref={invalidLoginRef}>Invalid username or password</span>\r\n            <div className=\"input-wrapper\">\r\n              <label className=\"\" htmlFor=\"email\">\r\n               Username\r\n            </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                className=\"input signin-input bg1\"\r\n                onChange={handleFormData}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n              <label className=\"\" htmlFor=\"email\">\r\n                Password\r\n            </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className=\"input signin-input bg1\"\r\n                onChange={handleFormData}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div className=\"no-account\">\r\n            </div>\r\n            <div className=\"btn-wrapper\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={sendFormData}\r\n                className=\"btn blue-bg default-clr\"\r\n              >\r\n                Sign In\r\n            </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      ):(<Redirect to=\"/org/Scanner\"></Redirect>)\r\n    );\r\n  }\r\nexport default ScannerLogin;\r\n","import React,{createContext, useState}from 'react';\r\n\r\n\r\n\r\nexport const ReportsNavigationContext = createContext()\r\nexport const ReportsNavigationProvider = (props) => {\r\n\r\n    const [reportsNavState, setReportsNavState] = useState(false); // false if close\r\n    return (\r\n       <ReportsNavigationContext.Provider value={[reportsNavState, setReportsNavState]}>\r\n           {props.children}\r\n       </ReportsNavigationContext.Provider>\r\n    );\r\n};\r\n\r\n","import React, { useState, useRef, useEffect,useContext } from 'react';\r\nimport HeroImg from '../../Assets/images/social_distance.svg'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../../Contexts/AuthContext'\r\nimport {ReportsNavigationContext} from '../../Contexts/ReportNavigationContext'\r\nimport {LogsNavigationContext} from '../../Contexts/LogsNavigationContext'\r\nimport axios from 'axios'\r\nimport cors from '../../cors'\r\n\r\nfunction AdminDashboard() {\r\n\r\n\r\n    const [roomFormClass, setRoomFormClass] = useState('form-wrapper fixed-pos default-bg hide')\r\n    const [scannerFormClass, setScannerFormClass] = useState('form-wrapper fixed-pos default-bg hide')\r\n    const [session,fetchSession] = useContext(AuthContext);\r\n    const [reportsNavState,setReportsNavState] = useContext(ReportsNavigationContext);\r\n    const [logsNavState,setLogsNavState] = useContext(LogsNavigationContext)\r\n    const [roomFormData, setRoomFormData] = useState('');\r\n    const [scannerFormData, setScannerFormData] = useState({});\r\n\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [lastAddedRoom, setLastAddedRoom] = useState('');\r\n\r\n    const dashboardRef = useRef()\r\n\r\n    function openCreateRoomForm() {\r\n        setRoomFormClass('form-wrapper fixed-pos default-bg')\r\n        addOpacity()\r\n    }\r\n    function closeCreateRoomForm() {\r\n        setRoomFormClass('form-wrapper fixed-pos default-bg hide')\r\n        removeOpacity()\r\n    }\r\n    function openScannerForm() {\r\n        setScannerFormClass('form-wrapper fixed-pos default-bg add-height')\r\n        addOpacity()\r\n    }\r\n    function closeScannerForm() {\r\n        setScannerFormClass('form-wrapper fixed-pos default-bg hide add-height')\r\n        removeOpacity()\r\n    }\r\n    function addOpacity() {\r\n        dashboardRef.current.style.opacity = '0.2';\r\n    }\r\n    function removeOpacity() {\r\n        dashboardRef.current.style.opacity = '1';\r\n    }\r\n    function handleOrgFormData(event) {\r\n        setRoomFormData(event.target.value);\r\n\r\n    }\r\n    function handleScannerFormData(event) {\r\n        const { name, value } = event.target;\r\n        setScannerFormData(prevState => ({\r\n            ...prevState, [name]: value\r\n        }));\r\n       \r\n    }\r\n    async function createRoom(){\r\n        const {data}  = await  axios.post(`${cors.domain}/room/createroom`,{room:roomFormData})\r\n        setLastAddedRoom(roomFormData);\r\n        closeCreateRoomForm()\r\n\r\n    }\r\n    useEffect(() => {\r\n        let isMount = true;\r\n        async function fetchRooms(){\r\n            const {data} = await axios.get(`${cors.domain}/room/fetchrooms`)\r\n            if(isMount){\r\n            setRooms(data);\r\n            }\r\n        }\r\n        fetchRooms();\r\n        return ()=>{\r\n            isMount = false;\r\n        }\r\n    },[lastAddedRoom])\r\n\r\n    async function createScannerAccount(event){\r\n        event.preventDefault();\r\n        const {data} = await axios.post(`${cors.domain}/room/signup`,scannerFormData);\r\n        closeScannerForm();\r\n          \r\n    }\r\n    useEffect(() => {\r\n    },[session])\r\n\r\n    if(reportsNavState){\r\n        return <Redirect to='/admin/reports'/>\r\n    }\r\n    if(logsNavState){\r\n        return <Redirect to='/admin/logs'/>\r\n    }\r\n   \r\n    return (\r\n        JSON.parse(localStorage.getItem('auth')).bool && JSON.parse(localStorage.getItem('auth')).role === \"Admin\"  ? (\r\n        <>\r\n            <div className=\"dashboard\" ref={dashboardRef}>\r\n                <div className=\"hero\">\r\n                    <div className=\"hero-text\">\r\n                        <span className=\"text\">Welcome <br /> Admin</span>\r\n                    </div>\r\n                    <div className=\"hero-image\">\r\n                        <img src={HeroImg} alt=\"social_distance\"></img>\r\n                    </div>\r\n                </div>\r\n                <div className=\"db-menu\">\r\n                    <div className=\"menu-selection bg1\" onClick={()=>{setReportsNavState(true)}}>\r\n                        <span>View Reports</span>\r\n                    </div>\r\n                    <div className=\"menu-selection bg1\" onClick={()=>{setLogsNavState(true)}}>\r\n                        <span>View Logs</span>\r\n                    </div>\r\n                    <div className=\"menu-selection bg1\" onClick={openCreateRoomForm}>\r\n                        <span>Add Room</span>\r\n                    </div>\r\n                    <div className=\"menu-selection bg1\" onClick={openScannerForm}>\r\n                        <span>Scanner Account</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={roomFormClass}>\r\n                <div className=\"form-title org-form-title\">\r\n                    <span>Create Room</span></div>\r\n                <form className=\"form-form org-form\">\r\n                    <div className=\"input-wrapper org-input-wrapper\">\r\n                        <label className=\"\" htmlFor=\"org\">Room Name</label>\r\n                        <input type=\"name\"\r\n                            className=\"input signin-input bg1\"\r\n                            name=\"room\"\r\n                            onChange={handleOrgFormData}\r\n                            required></input>\r\n                    </div>\r\n                    <div className=\"btn-wrapper org-btn-wrapper\">\r\n\r\n                        <button type=\"button\"\r\n                            className=\"btn blue-bg default-clr\"\r\n                            onClick={createRoom}>Create</button>\r\n\r\n                        <button type=\"button\"\r\n                            className=\"btn bg1\"\r\n                            onClick={closeCreateRoomForm}>Cancel</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div className={scannerFormClass}>\r\n                <div className=\"form-title org-form-title\">\r\n                    <span>Create Scanner Account</span></div>\r\n                <form className=\"form-form org-form\" onSubmit={createScannerAccount}>\r\n                    <div className=\"input-wrapper org-input-wrapper\">\r\n                        <label className=\"\" htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"input signin-input bg1\"\r\n                            name=\"username\"\r\n                            onChange={handleScannerFormData}\r\n                            required></input>\r\n                    </div>\r\n                    <div className=\"input-wrapper org-input-wrapper\">\r\n                        <label className=\"\" htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"input signin-input bg1\"\r\n                            name=\"password\"\r\n                            onChange={handleScannerFormData}\r\n                            required></input>\r\n                    </div>\r\n                    <div className=\"input-wrapper org-input-wrapper\">\r\n                        <label className=\"\" htmlFor=\"org\">Room</label>\r\n                        <select className=\"bg1\"\r\n                            name=\"room\"\r\n                            onChange={handleScannerFormData}>\r\n                            <option value=\"\">Select Organization</option>\r\n                            {\r\n                                rooms.map(room => {\r\n                                    return <option value={room.room} key={room._id}>{room.room}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"btn-wrapper org-btn-wrapper\">\r\n                        <button type=\"submit\" className=\"btn blue-bg default-clr\">Create</button>\r\n                        <button type=\"button\"\r\n                            className=\"btn bg1\"\r\n                            onClick={closeScannerForm}>Cancel</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </>\r\n        ) : (<Redirect to=\"/\"></Redirect>)\r\n    );\r\n}\r\n\r\nexport default AdminDashboard;","import React, { useState,useContext,useRef} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {AuthContext} from '../../Contexts/AuthContext'\r\nimport axios from \"axios\";\r\nimport cors from \"../../cors\"\r\n\r\nfunction AdminLogin() {\r\n  \r\n  const [session,reFetchSession] = useContext(AuthContext)\r\n  const [formData, setFormData] = useState({});\r\n  const invalidLoginRef = useRef()\r\n  function handleFormData(event) {\r\n    const { name, value } = event.target;\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }\r\n  async function sendFormData() {\r\n    try {\r\n       \r\n      const response = await axios.post(`${cors.domain}/admin/signin`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n          //\"Access-Control-Allow-Origin\": \"http://localhost:3000\",\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      if (response.data.message === \"OK\") {\r\n        localStorage.setItem('auth',JSON.stringify({bool:true,role:\"Admin\"}))\r\n        reFetchSession(prevState => prevState + 1);\r\n      }\r\n      else {\r\n        invalidLoginRef.current.style.display = \"inline\"\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n    return (\r\n      !JSON.parse(localStorage.getItem('auth')).bool && JSON.parse(localStorage.getItem('auth')).role !== \"Admin\" ? (\r\n      <div className=\"sign-in\">\r\n        <div className=\"form-wrapper\">\r\n          <div className=\"form-title\">\r\n            <span>Administrator</span>\r\n          </div>\r\n          <form className=\"form-form\">\r\n          <span className=\"error-message warn\" ref={invalidLoginRef}>Invalid username or password</span>\r\n            <div className=\"input-wrapper\">\r\n              <label className=\"\" htmlFor=\"email\">\r\n               Username\r\n            </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                className=\"input signin-input bg1\"\r\n                onChange={handleFormData}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n              <label className=\"\" htmlFor=\"email\">\r\n                Password\r\n            </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className=\"input signin-input bg1\"\r\n                onChange={handleFormData}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div className=\"no-account\">\r\n            </div>\r\n            <div className=\"btn-wrapper\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={sendFormData}\r\n                className=\"btn blue-bg default-clr\"\r\n              >\r\n                Sign In\r\n            </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      ):(<Redirect to=\"/admin/dashboard\"></Redirect>)\r\n    );\r\n  }\r\n\r\n\r\nexport default AdminLogin;\r\n","import React, { useEffect, useState, useContext} from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport {UserContext} from '../../Contexts/UserContext'\r\nimport {LogsNavigationContext} from '../../Contexts/LogsNavigationContext'\r\nimport {AuthContext} from '../../Contexts/AuthContext'\r\nimport {IoArrowBackCircleSharp} from 'react-icons/io5'\r\nimport cors from '../../cors'\r\nfunction TravelLogs({setLoadingClass}) {\r\n\r\n    const [user,setUser] = useContext(UserContext)\r\n    const [session,fetchSession] = useContext(AuthContext)\r\n    const [logsNavState,setLogsNavState] = useContext(LogsNavigationContext)\r\n    const [lastReported,setLastReported] = useState({});\r\n    const [travelLogs,setTravelLogs] = useState([])\r\n\r\n    useEffect(()=>{\r\n        let isMount = true;\r\n        async function fetchTravelLogs(){\r\n            setLoadingClass('loading-wrapper')\r\n            try{\r\n            const {data} = await axios.post(`${cors.domain}/client/fetchlogs`,JSON.parse(localStorage.getItem('userId')));\r\n            setLoadingClass('hide loading-wrapper')\r\n            if(isMount){\r\n            setTravelLogs(data);\r\n            }\r\n\r\n            }catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchTravelLogs();\r\n      \r\n        return ()=>{\r\n            isMount = false;\r\n        }\r\n    },[lastReported])\r\n\r\n    if(!logsNavState){\r\n        return <Redirect to=\"/dashboard\"/>\r\n    }\r\n        return (\r\n           JSON.parse(localStorage.getItem('auth')).bool && JSON.parse(localStorage.getItem('auth')).role === \"Client\" ? (\r\n           <>\r\n           <div className=\"back-buttons\">\r\n                \r\n            </div>\r\n            <div className=\"travel-logs\">\r\n                <div className=\"title-wrapper\">\r\n                    <span className=\"title-text\">Travel Logs</span>\r\n                    <span className=\"back-btn blue-clr\" onClick={()=>{setLogsNavState(false)}}><IoArrowBackCircleSharp></IoArrowBackCircleSharp></span>\r\n                </div>\r\n                <div className=\"travel-logs-wrapper\">\r\n                    <ul className=\"travel-log-lists\">\r\n                    { \r\n                        travelLogs.map((log,index)=>{\r\n                            return <TravelLogList log={log} setLastReported={setLastReported} user={user} key={index}></TravelLogList>\r\n                        })\r\n                         \r\n                    }      \r\n                    \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            </>\r\n         ): (<Redirect to=\"/\"></Redirect>)\r\n        );\r\n    \r\n}\r\nfunction TravelLogList({ log,user,setLastReported}) {\r\n\r\n    const [logState,setLogState] = useState({});\r\n    const [reportModalClass, setReportModalClass] = useState('report-modal bg1 hide');\r\n\r\n    useEffect(() => {\r\n        if(JSON.parse(localStorage.getItem('auth')).bool && JSON.parse(localStorage.getItem('auth')).role === \"Client\"){\r\n            setLogState(log);\r\n        }\r\n    },[])\r\n    async function sendReport(){\r\n        const report = {\r\n            id:user.id,\r\n            name:user.name,\r\n            logId:log.id,\r\n            location:log.location,\r\n            time:`${log.day}, ${log.time}, ${log.month}`\r\n        }\r\n        const {data} = await axios.post(`${cors.domain}/client/report`,report)\r\n        \r\n        setLastReported(report);\r\n    }\r\n    return (\r\n        !log.isReported ? (\r\n        <li className=\"travel-log-list bg1\">\r\n           <span className=\"location\">{log.location}</span>\r\n           <span className=\"time\">{`${log.day}, ${log.time}, ${log.month}`}</span>\r\n           <span className=\"not-me warn light\" onClick={()=>{setReportModalClass('report-modal bg1')}}>Report</span>\r\n           <div className={reportModalClass}>\r\n               <div className=\"report-modal-header warn-bg\">\r\n                   <span className=\"default-clr\">Confirmation</span>\r\n               </div>\r\n               <div className=\"report-prompt\">\r\n           <span className=\"report-message\">Are you sure, you want to report this is activity?</span>\r\n           <div>\r\n           <span className=\"confirm modal-btn warn\" onClick={sendReport}>Confirm</span>\r\n           <span className=\"cancel modal-btn  ok-text\" onClick={()=>{setReportModalClass('report-modal bg1 hide')}}>Cancel</span>\r\n           </div>\r\n           </div>\r\n        </div>\r\n        </li>\r\n    \r\n        ) : (\r\n            <li className=\"travel-log-list bg1\">\r\n            <span className=\"location\">{log.location}</span>\r\n            <span className=\"time\">{`${log.day}, ${log.time}, ${log.month}`}</span>\r\n            <span className=\"warn\">Report had been sent.</span>\r\n         </li>\r\n        )\r\n    )\r\n}\r\nexport default TravelLogs;","import React,{useContext} from 'react';\r\nimport '../Assets/header.css'\r\nimport {BiLogOut} from 'react-icons/bi'\r\nimport axios from 'axios';\r\nimport {AuthContext} from '../Contexts/AuthContext'\r\nimport cors from '../cors'\r\n\r\nfunction Header(props) {\r\n\r\n    const [session,fetchSession] = useContext(AuthContext);\r\n\r\n    async function logout(){\r\n        const {data} = await axios.post(`${cors.domain}/logout`,{},{withCredentials:true});\r\n        localStorage.setItem('auth',JSON.stringify({bool:false,role:\"NONE\"}));\r\n        localStorage.removeItem('userId');\r\n        fetchSession(prevState=> prevState + 1);\r\n    }\r\n\r\n    return (\r\n        <header className=\"nav-header\">   \r\n               <div className=\"logout\">\r\n                    <span className=\"default-clr\" onClick={logout}><BiLogOut></BiLogOut></span>\r\n                   </div> \r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useEffect, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { IoArrowBackCircleSharp } from 'react-icons/io5'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { ReportsNavigationContext } from '../../Contexts/ReportNavigationContext'\r\nimport cors from '../../cors'\r\nfunction Reports({setLoadingClass}) {\r\n\r\n    const [reports, setReports] = useState([]);\r\n    const [reportsNavState, setReportsNavState] = useContext(ReportsNavigationContext);\r\n    useEffect(() => {\r\n        let isMount = true;\r\n\r\n        async function fetchReports() {\r\n            setLoadingClass('loading-wrapper')\r\n            const { data } = await axios.post(`${cors.domain}/admin/reports`, {})\r\n            setLoadingClass('hide')\r\n            if (isMount) {\r\n                setReports(data)\r\n            }\r\n        }\r\n        fetchReports();\r\n        return () => {\r\n            isMount = false;\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    if (!reportsNavState) {\r\n        return <Redirect to='/admin/dashboard'/>\r\n    }\r\n    return (\r\n        JSON.parse(localStorage.getItem('auth')).bool && JSON.parse(localStorage.getItem('auth')).role === \"Admin\" ? (\r\n            <div className=\"reports\">\r\n                <div className=\"title-wrapper\">\r\n                    <span className=\"title-text\">Reports</span>\r\n                    <span className=\"back-btn blue-clr\" onClick={() => {\r\n                        setReportsNavState(false)\r\n                    }}><IoArrowBackCircleSharp></IoArrowBackCircleSharp></span>\r\n                </div>\r\n                <div className=\"all-reports\">\r\n                    <ul>\r\n                        {\r\n                            reports.map((report, index) => {\r\n                                return <Report report={report} key={index}></Report>\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        ) : (<Redirect to='/dashboard'></Redirect>)\r\n    );\r\n}\r\n\r\n\r\nfunction Report({ report }) {\r\n\r\n    return (\r\n        <li>\r\n            <details>\r\n                <summary className=\"report-summary\">{`${report.reporter} reported an activity`}</summary>\r\n                <p className=\"summary-text warn\">{report.reportText}</p>\r\n            </details>\r\n        </li>\r\n    )\r\n}\r\nexport default Reports;","import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport { IoArrowBackCircleSharp } from 'react-icons/io5'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { BiEdit } from 'react-icons/bi'\r\nimport { UserContext } from '../../Contexts/UserContext'\r\nimport { AuthContext } from '../../Contexts/AuthContext'\r\nimport axios from 'axios'\r\nimport {ProfileNavStateContext} from '../../Contexts/ProfileNavState'\r\nimport cors from '../../cors'\r\n\r\nfunction showValid(inputs, messageTextRef) {\r\n    const VALID = {\r\n        OUTLINE: '2px solid #6BD382',\r\n        DISPLAY: \"NONE\"\r\n    }\r\n    if (Array.isArray(inputs)) { //check if element is an array\r\n        inputs.forEach(input => {\r\n            input.style.outline = VALID.OUTLINE //MAKE EVERY <input> OUTLINE GREEN\r\n        });\r\n    }\r\n    else {\r\n        inputs.target.style.outline = VALID.OUTLINE\r\n    }\r\n    messageTextRef.current.style.display = VALID.DISPLAY // REMOVE ERROR MESSAGE\r\n}\r\n\r\nfunction showInvalid(inputs, messageTextRef) {\r\n    const INVALID = {\r\n        OUTLINE: '2px solid #db5248',\r\n        DISPLAY: \"inline\"\r\n    }\r\n    if (Array.isArray(inputs)) {\r\n        inputs.forEach(input => {\r\n            input.style.outline = INVALID.OUTLINE //MAKE EVERY <input> OUTLINE RED\r\n        });\r\n    }\r\n    else {\r\n        inputs.target.style.outline = INVALID.OUTLINE\r\n    }\r\n    messageTextRef.current.style.display = INVALID.DISPLAY // DISPLAY ERROR MESSAGE\r\n}\r\nfunction Profile() {\r\n\r\n    const [user, setUser] = useContext(UserContext)\r\n    const [session, fetchSession] = useContext(AuthContext)\r\n    const [generalInfoModal, setGeneralInfoModal] = useState(\"hide max profile-modal\");\r\n    const [mobileInfoModal, setMobileInfoModal] = useState(\"hide max profile-modal modal-height\")\r\n    const [passwordInfoModal, setPasswordInfoModal] = useState(\"hide max profile-modal modal-height\")\r\n    const [profileNavState,setProfileNavState] = useContext(ProfileNavStateContext)\r\n\r\n    if(!profileNavState){\r\n        return <Redirect to=\"/dashboard\"></Redirect>\r\n    }\r\n    return (\r\n        JSON.parse(localStorage.getItem('auth')).bool && JSON.parse(localStorage.getItem('auth')).role === \"Client\" ? (\r\n        <div className=\"profile-wrapper\">\r\n\r\n            <div className=\"travel-logs profile\">\r\n                <div className=\"title-wrapper\">\r\n                    <span className=\"title-text\">Profile</span>\r\n                    <span className=\"back-btn blue-clr\" onClick={()=>{setProfileNavState(false)}}><IoArrowBackCircleSharp></IoArrowBackCircleSharp></span>\r\n                </div>\r\n                <div className=\"user-details\">\r\n                    <div className=\"general-info bg1\">\r\n                        <div>\r\n                            <label>General</label>\r\n                            <span>{user.name}</span>\r\n                            <div>\r\n                                <span className=\"inline\">{user.province + \", \"}</span>\r\n                                <span className=\"inline\">{user.city}</span>\r\n                            </div>\r\n                            <span>{user.fullAddress}</span>\r\n                        </div>\r\n                        <div className=\"edit-wrapper\">\r\n                            <span className=\"inline \" onClick={() => { setGeneralInfoModal('show max profile-modal') }}><BiEdit></BiEdit></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"important-info bg1\">\r\n                        <div className=\"info-wrapper\">\r\n                            <label>Mobile #</label>\r\n                            <span className=\"important\">\r\n                                {user.mobileNumber}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"edit-wrapper\">\r\n                            <span className=\"inline \" onClick={() => {\r\n                                setMobileInfoModal('show max profile-modal modal-height')\r\n                            }}><BiEdit></BiEdit></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"important-info bg1\">\r\n                        <div className=\"info-wrapper\">\r\n                            <label>Password</label>\r\n                            <span className=\"important\">\r\n                                Change Password\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"edit-wrapper\">\r\n                            <span className=\"inline\" onClick={() => {\r\n                                setPasswordInfoModal('show max profile-modal modal-height')\r\n                            }}><BiEdit></BiEdit></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <GeneralInfoModal Class={generalInfoModal} user={user} fetchSession={fetchSession} setGeneralInfoModal={setGeneralInfoModal}></GeneralInfoModal>\r\n            <MobilePhoneModal user={user} fetchSession={fetchSession} mobileInfoModalClass={mobileInfoModal} setMobileInfoModal={setMobileInfoModal}></MobilePhoneModal>\r\n            <PasswordModal user={user} Class={passwordInfoModal} setPasswordInfoModal={setPasswordInfoModal}></PasswordModal>\r\n        </div>):(<Redirect to=\"/\"/>)\r\n    );\r\n}\r\n\r\n\r\nfunction GeneralInfoModal({ Class, setGeneralInfoModal, fetchSession, user }) {\r\n    const [formData, setFormData] = useState(JSON.parse(localStorage.getItem('userId')));\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [cities, setCities] = useState([])\r\n\r\n    const citySelectBox = useRef();\r\n\r\n\r\n\r\n    function handleFormData(data) {\r\n\r\n        const { name, value } = data.target;\r\n        setFormData(prevState => ({ ...prevState, [name]: value }))\r\n\r\n    }\r\n    async function submitUpdate(e) {\r\n        e.preventDefault()\r\n        const { data } = await axios.patch(`${cors.domain}/client/updategeneral`, formData, { withCredentials: true });\r\n        hide();\r\n        fetchSession(prevState => prevState + 1)\r\n    }\r\n    function hide() {\r\n        setGeneralInfoModal('hide max profile-modal')\r\n    }\r\n    useEffect(() => {\r\n\r\n        async function getProvinces() {\r\n            const data = await axios.get(`${cors.domain}/philippines/provinces`)\r\n            return data;\r\n        }\r\n        getProvinces().then(response => {\r\n            setProvinces(response.data);\r\n        })\r\n    }, [])\r\n\r\n    async function getCitiesByProvince(event) {\r\n\r\n        let provinceName = event.target.value;\r\n        async function getCities() {\r\n            const response = await axios.get(`${cors.domain}/philippines/provinces/cities/${provinceName}`)\r\n            setCities(response.data)\r\n            handleFormData(event)\r\n        }\r\n        getCities();\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={Class}>\r\n            <div className=\"form-title org-form-title\">\r\n                <span>Edit General Info</span></div>\r\n            <form className=\"form-form org-form\" onSubmit={submitUpdate}>\r\n                <div className=\"input-wrapper org-input-wrapper\">\r\n                    <label className=\"\" htmlFor=\"name\">Fullname</label>\r\n                    <input\r\n                        type=\"name\"\r\n                        className=\"input signin-input bg1\"\r\n                        name=\"fullname\"\r\n\r\n                        onChange={handleFormData}\r\n                        required></input>\r\n                </div>\r\n\r\n                <div className=\"input-wrapper org-input-wrapper\">\r\n                    <label className=\"\" htmlFor=\"Province\">Province</label>\r\n                    <select className=\"bg1\"\r\n                        name=\"province\"\r\n                        onChange={getCitiesByProvince}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select Province</option>\r\n                        {\r\n                            provinces.map(province => {\r\n                                return <option value={province.name} key={province.key}>{province.name}</option>\r\n                            })\r\n                        }\r\n\r\n                    </select>\r\n                </div>\r\n                <div className=\"input-wrapper org-input-wrapper\">\r\n                    <label className=\"\" htmlFor=\"Province\">City</label>\r\n                    <select className=\"bg1\"\r\n                        ref={citySelectBox}\r\n                        name=\"city\"\r\n                        onChange={handleFormData}\r\n                        required\r\n                    >\r\n\r\n                        {\r\n                            cities.map((city, key) => {\r\n                                return <option value={city.name + \" City\"} key={key}>{city.name + \" City\"}</option>\r\n                            }\r\n                            )\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"input-wrapper org-input-wrapper\">\r\n                    <label className=\"\" htmlFor=\"address\">Detailed address</label>\r\n                    <textarea className=\"bg1\" onChange={handleFormData}\r\n                        name=\"fullAddress\" required></textarea>\r\n                </div>\r\n                <div className=\"btn-wrapper org-btn-wrapper\">\r\n                    <button type=\"submit\" className=\"btn blue-bg default-clr btn-font-size\">Save</button>\r\n                    <button type=\"button\"\r\n                        onClick={hide}\r\n                        className=\"btn bg1 btn-font-size\"\r\n                    >Cancel</button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nfunction MobilePhoneModal({ user, fetchSession, setMobileInfoModal, mobileInfoModalClass }) {\r\n\r\n    const [steps, setStep] = useState(1);\r\n    const [isValidMobileNumber, setValidMobileNumber] = useState(false);\r\n    const [newMobileNumber, setNewMobileNumber] = useState();\r\n    const [code, setCode] = useState();\r\n    const invalidMobileNumberErrorRef = useRef();\r\n    const invalidCodeErrorRef = useRef();\r\n    const codeTextBox = useRef();\r\n\r\n    function hide() {\r\n        setMobileInfoModal('show max profile-modal modal-height');\r\n    }\r\n    async function validateMobileNumber(event) {\r\n\r\n        let mobileNumber = event.target.value;\r\n        let mobileRegexPattern = \"^(09|\\\\+639)\\\\d{9}$\"\r\n        if (mobileNumber.match(mobileRegexPattern)) {\r\n            setValidMobileNumber(true);\r\n            showValid(event, invalidMobileNumberErrorRef)\r\n            const response = await axios.post(`${cors.domain}/validateMobileNumberIfTaken`, { mobileNumber: mobileNumber })\r\n            if (response.data) {\r\n                showInvalid(event, invalidMobileNumberErrorRef)\r\n            }\r\n\r\n        }\r\n        else {\r\n\r\n            setValidMobileNumber(false)\r\n            showInvalid(event, invalidMobileNumberErrorRef)\r\n            if (event.target.value.length > 11) {\r\n                let concatenatedMobileNumber = event.target.value.substring(0, 11);\r\n                event.target.value = concatenatedMobileNumber;\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function handleMobileNumber(event) {\r\n        setNewMobileNumber(event.target.value);\r\n    }\r\n    function handleCode(event) {\r\n        setCode(event.target.value)\r\n    }\r\n\r\n\r\n    async function submitNewMobileNumber() {\r\n\r\n        if (isValidMobileNumber) {\r\n           \r\n            const { data } = await axios.post(`${cors.domain}/createVerification`, { mobileNumber: newMobileNumber });\r\n           \r\n            setStep(prevState => prevState + 1)\r\n\r\n        }\r\n\r\n    }\r\n    function showInvalid_LOCAL(inputs, messageTextRef) {\r\n        const INVALID = {\r\n            OUTLINE: '2px solid #db5248',\r\n            DISPLAY: \"inline\"\r\n        }\r\n        if (Array.isArray(inputs)) {\r\n            inputs.forEach(input => {\r\n                input.style.outline = INVALID.OUTLINE //MAKE EVERY ELEMENT OUTLINE RED\r\n            });\r\n        }\r\n        else {\r\n            inputs.style.outline = INVALID.OUTLINE\r\n        }\r\n        messageTextRef.current.style.display = INVALID.DISPLAY // DISPLAY ERROR MESSAGE\r\n    }\r\n    async function submitCode(event) {\r\n        event.preventDefault()\r\n        axios.post(`${cors.domain}/verify`, { code: code, mobileNumber: newMobileNumber }).then(async (resp) => {\r\n            if (resp.data === \"VERIFIED\") {\r\n                const { data } = await axios.put(`${cors.domain}/client/newmobile`, { id: user.id, mobileNumber: newMobileNumber }, { withCredentials: true })\r\n                fetchSession(prevState => prevState + 1)\r\n                hide()\r\n            }\r\n            else {\r\n                showInvalid_LOCAL(codeTextBox.current, invalidCodeErrorRef);\r\n            }\r\n        });\r\n\r\n    }\r\n    function validateLengthOfCode(event) {\r\n        let enteredCode = event.target;\r\n        if (enteredCode.value.length > 6) {\r\n            enteredCode.value = enteredCode.value.substring(0, 6);\r\n        }\r\n    }\r\n    function hide() {\r\n        setMobileInfoModal('hide max profile-modal modal-height');\r\n    }\r\n\r\n    return (\r\n        steps === 1 ? (\r\n            <div className={mobileInfoModalClass}>\r\n                <div className=\"form-title org-form-title\">\r\n                    <span>New Mobile Number</span></div>\r\n                <form className=\"form-form org-form\">\r\n                    <div className=\"input-wrapper org-input-wrapper\">\r\n                        <label className=\"\" htmlFor=\"name\">Enter New Mobile Number</label>\r\n                        <span className=\"error-message\" ref={invalidMobileNumberErrorRef}>Invalid mobile number</span>\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"input signin-input bg1\"\r\n                            name=\"mobileNumber\"\r\n                            onChange={handleMobileNumber}\r\n                            onInput={validateMobileNumber}\r\n                            required></input>\r\n                    </div>\r\n\r\n                    <div className=\"btn-wrapper org-btn-wrapper\">\r\n                        <button type=\"button\"\r\n                            className=\"btn blue-bg default-clr btn-font-size\"\r\n                            onClick={submitNewMobileNumber}\r\n                        >Next</button>\r\n                        <button type=\"button\"\r\n                            className=\"btn bg1 btn-font-size\"\r\n                            onClick={hide}\r\n                        >Cancel</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>) : (\r\n\r\n                <div className={mobileInfoModalClass}>\r\n                    <div className=\"form-title org-form-title\">\r\n                        <span>Confirmation</span></div>\r\n                    <form className=\"form-form org-form\" onSubmit={submitCode}>\r\n                        <div className=\"input-wrapper org-input-wrapper\">\r\n                            <span className=\"error-message\" ref={invalidCodeErrorRef}>Invalid code</span>\r\n                            <label className=\"\" htmlFor=\"name\">Enter 6 - Digit Code</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"input signin-input bg1\"\r\n                                name=\"mobileNumber\"\r\n                                ref={codeTextBox}\r\n                                onChange={handleCode}\r\n                                onInput={validateLengthOfCode}\r\n                                required></input>\r\n                        </div>\r\n\r\n                        <div className=\"btn-wrapper org-btn-wrapper\">\r\n                            <button type=\"submit\" className=\"btn blue-bg default-clr btn-font-size\">Confirm</button>\r\n                            <button type=\"button\"\r\n                                className=\"btn bg1 btn-font-size\"\r\n                                onClick={hide}\r\n                            >Cancel</button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n\r\n            )\r\n\r\n    )\r\n}\r\n\r\nfunction PasswordModal({ Class, setPasswordInfoModal, user }) {\r\n\r\n    const [isValidPasswords, setValidPasswords] = useState({\r\n        isOldPasswordCorrect: false,\r\n        isNewPasswordValid: false\r\n    });\r\n    const [oldPassword, setOldPassword] = useState();\r\n    const [newPassword, setNewPassword] = useState();\r\n\r\n\r\n    const passwordIsWeakRef = useRef()\r\n    const passwordNotSameRef = useRef();\r\n    const incorrectOldPasswordRef = useRef();\r\n\r\n    function hide() {\r\n        setPasswordInfoModal('hide max profile-modal modal-height')\r\n    }\r\n\r\n    function validatePasswordLength(event) {\r\n        const password = event.target.value;\r\n        if (password.length >= 8) {\r\n            showValid(event, passwordIsWeakRef);\r\n            setValidPasswords(prevState => ({ ...prevState, isNewPasswordValid: true }))\r\n        } else {\r\n            showInvalid(event, passwordIsWeakRef);\r\n            setValidPasswords(prevState => ({ ...prevState, isNewPasswordValid: false }))\r\n        }\r\n    }\r\n    const newPasswordInputRef = useRef(); //password input, input element\r\n    function validateIfPasswordsAreSame(event) {\r\n        const confirmPasswordInput = event.target;\r\n        let arrayOfPasswordInput = [confirmPasswordInput, newPasswordInputRef.current];\r\n\r\n        if (newPasswordInputRef.current.value === confirmPasswordInput.value) {\r\n            showValid(arrayOfPasswordInput, passwordNotSameRef);\r\n            setValidPasswords(prevState => ({ ...prevState, isNewPasswordValid: true }))\r\n\r\n        } else {\r\n            showInvalid(arrayOfPasswordInput, passwordNotSameRef);\r\n            setValidPasswords(prevState => ({ ...prevState, isNewPasswordValid: false }))\r\n        }\r\n    }\r\n\r\n    async function CheckPasswordIsCorrect(event) {\r\n        const { data } = await axios.post(`${cors.domain}/client/password`, { id: user.id, password: oldPassword })\r\n        if (data === \"OK\") {\r\n            setValidPasswords(prevState => ({ ...prevState, isOldPasswordCorrect: true }))\r\n            showValid(event, incorrectOldPasswordRef)\r\n        }\r\n        else {\r\n            setValidPasswords(prevState => ({ ...prevState, isOldPasswordCorrect: false }))\r\n            showInvalid(event, incorrectOldPasswordRef)\r\n        }\r\n    }\r\n\r\n    async function submitNewPassword(e) {\r\n        e.preventDefault();\r\n        if (isValidPasswords.isNewPasswordValid && isValidPasswords.isOldPasswordCorrect) {\r\n            const { data } = await axios.post(`${cors.domain}/client/savepassword`, { id: user.id, password: newPassword })\r\n            if(data === \"OK\") {\r\n                hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className={Class}>\r\n            <div className=\"form-title org-form-title\">\r\n                <span>Change Password</span></div>\r\n            <form className=\"form-form org-form\" onSubmit={submitNewPassword}>\r\n                <div className=\"input-wrapper org-input-wrapper\">\r\n                    <span className=\"error-message\" ref={incorrectOldPasswordRef}>Incorrect Password.</span>\r\n                    <label className=\"\" htmlFor=\"name\">Old Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"input signin-input bg1\"\r\n                        onChange={(e) => { setOldPassword(e.target.value) }}\r\n                        onBlur={CheckPasswordIsCorrect}\r\n                        name=\"old\"\r\n                        required></input>\r\n                </div>\r\n                <div className=\"input-wrapper org-input-wrapper\">\r\n                    <span className=\"error-message\" ref={passwordIsWeakRef}>Password must be atleast 8 characters or longer.</span>\r\n                    <span className=\"error-message\" ref={passwordNotSameRef}>Passwords are not the same.</span>\r\n                    <label className=\"\" htmlFor=\"name\">New Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"input signin-input bg1\"\r\n                        name=\"newPassword\"\r\n                        onChange={(e) => { setNewPassword(e.target.value) }}\r\n                        ref={newPasswordInputRef}\r\n                        onInput={validatePasswordLength}\r\n                        required></input>\r\n                </div>\r\n                <div className=\"input-wrapper org-input-wrapper\">\r\n\r\n                    <label className=\"\" htmlFor=\"name\">Confirm New Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"input signin-input bg1\"\r\n                        name=\"confirmPass\"\r\n                        onInput={validateIfPasswordsAreSame}\r\n                        required></input>\r\n                </div>\r\n                <div className=\"btn-wrapper org-btn-wrapper\">\r\n                    <button type=\"submit\" className=\"btn blue-bg default-clr btn-font-size\">Save</button>\r\n                    <button type=\"button\"\r\n                        onClick={hide}\r\n                        className=\"btn bg1 btn-font-size\"\r\n                    >Cancel</button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React, { useEffect, useState,useContext} from 'react';\r\nimport axios from 'axios';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {IoArrowBackCircleSharp} from 'react-icons/io5'\r\nimport {LogsNavigationContext} from '../../Contexts/LogsNavigationContext'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport cors from '../../cors'\r\nfunction Logs({setLoadingClass}) {\r\n    const [travelLogs,setTravelLogs] = useState([])\r\n    const [logsNavState,setLogsNavState] = useContext(LogsNavigationContext)\r\n    const [rooms,setRooms] = useState([])\r\n    const [dateFilter,setDateFilter] = useState(new Date());\r\n    const [selectedRoom,setSelectedRoom] = useState('');\r\n\r\n        useEffect(()=>{\r\n           \r\n            let isMount = true;\r\n            async function fetchAllLogs(){\r\n                setLoadingClass('loading-wrapper')\r\n                try{\r\n                const {data} = await axios.post(`${cors.domain}/admin/logs`,{})\r\n                setLoadingClass('hide')\r\n                if(isMount){\r\n                setTravelLogs(data)\r\n                }\r\n                }catch(error){\r\n                    console.log(error)\r\n                }\r\n            }\r\n            async function fetchRooms(){\r\n                const {data} = await axios.get(`${cors.domain}/room/fetchrooms`)\r\n                if(isMount){\r\n                setRooms(data);\r\n                }\r\n            }\r\n            fetchAllLogs();\r\n            fetchRooms();\r\n\r\n            return ()=>{\r\n                isMount = false;\r\n            }\r\n        },[])\r\n        \r\n        useEffect(() => {\r\n            async function fetchFilteredLogs(){\r\n                const {data} = await axios.post(`${cors.domain}/admin/logs/${dateFilter}/${selectedRoom}`,{});\r\n                if(data.length > 0){\r\n                setTravelLogs(data)\r\n                }\r\n    \r\n            }\r\n            if(selectedRoom.length > 0){\r\n                fetchFilteredLogs();\r\n            }\r\n           \r\n\r\n        },[selectedRoom])\r\n   \r\n    \r\n\r\n        if(!logsNavState){\r\n            return <Redirect to=\"/admin/dashboard\"></Redirect>\r\n        }\r\n        \r\n    return (\r\n        <>\r\n        <div className=\"back-buttons\">\r\n             \r\n         </div>\r\n         <div className=\"travel-logs\">\r\n             <div className=\"title-wrapper\">\r\n                 <span className=\"title-text\">Student Logs</span>\r\n                 <span className=\"back-btn\"  onClick={()=>{setLogsNavState(false)}}><IoArrowBackCircleSharp></IoArrowBackCircleSharp></span>\r\n             </div>\r\n           <div className=\"filters\">\r\n               <label>Filters</label>\r\n             <DatePicker   \r\n             selected={dateFilter}  \r\n             onChange={date =>{\r\n                   \r\n                 setDateFilter(date);\r\n             }\r\n            } \r\n            className=\"date-picker bg1\"\r\n             />\r\n                   <div className=\"input-wrapper\">\r\n                            <select className=\"bg1\" name=\"Room\" \r\n                            onChange={(room)=>{setSelectedRoom(room.target.value)}}\r\n                            >\r\n                            <option>Select room</option>\r\n                            {\r\n                                rooms.map(room => {\r\n                                    return <option value={room.room} key={room._id}>{room.room}</option>\r\n                                })\r\n                            }\r\n                            </select>\r\n                        </div>\r\n             </div>\r\n             <div className=\"all-reports\">\r\n                 <ul className=\"travel-log-lists admin-logs\">\r\n                 { \r\n                     travelLogs.map((log,index)=>{\r\n                         return <TravelLogList log={log}  key={index}></TravelLogList>\r\n                     })\r\n                      \r\n                 }      \r\n                 </ul>\r\n             </div>\r\n         </div>\r\n         </>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction TravelLogList({ log,user,setLastReported}) {\r\n\r\n    return (\r\n        <li className=\"admin-logs-list\">\r\n            <details className=\"admin-log-list\"> \r\n            <summary className=\"report-summary\">{log.name}</summary>\r\n            <span className=\"summary-text time ok-text\">{\"User ID : \" + log.userId}</span><br/>\r\n            <span className=\"summary-text time ok-text\">{\"Contact #: \" + log.mobileNumber}</span><br/>\r\n           <span className=\"summary-text time ok-text\">{`${log.day}, ${log.time}, ${log.month} - ${log.location}`}</span>\r\n           </details>\r\n        </li>\r\n    \r\n        \r\n    )\r\n}\r\nexport default Logs;","export default __webpack_public_path__ + \"static/media/loading.238bc502.svg\";","import React from 'react';\r\nimport loading from '../Assets/images/loading.svg'\r\n\r\nfunction Loading({Class}) {\r\n    return (\r\n        <div className={Class}>\r\n            <img src={loading} alt=\"loading\"></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","\r\nimport {useState} from 'react'\r\nimport Home from './Components/Home';\r\nimport Login from './Components/Login';\r\nimport Register from './Components/Client/Register/Register';\r\nimport Dashboard from './Components/Client/Dashboard';\r\nimport Scanner from './Components/Scanner/ScannerDashboard'\r\nimport ScannerLogin from './Components/Scanner/ScannerLogin'\r\nimport AdminDashboard from './Components/Admin/AdminDashboard'\r\nimport AdminLogin from './Components/Admin/AdminLogin'\r\nimport TravelLogs from './Components/Client/TravelLogs'\r\nimport Header from './Components/Header'\r\nimport Reports from './Components/Admin/Reports'\r\nimport Profile from './Components/Client/Profile'\r\nimport './Assets/app.css'\r\nimport './Assets/dashboard.css'\r\nimport {AuthProvider} from './Contexts/AuthContext'\r\nimport {UserProvider} from './Contexts/UserContext'\r\nimport {LogsNavigationProvider} from './Contexts/LogsNavigationContext'\r\nimport {ReportsNavigationProvider} from './Contexts/ReportNavigationContext'\r\nimport {ProfileNavStateProvider} from './Contexts/ProfileNavState'\r\nimport Logs from './Components/Admin/Logs'\r\nimport Loading from './Components/Loading'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  if(localStorage.getItem('auth') === null){\r\n    console.log(\"FIRST RUN\");\r\n    localStorage.setItem('auth',JSON.stringify({bool:false, role:\"none\"}))\r\n    localStorage.setItem('userId',JSON.stringify({id:''}))\r\n  }\r\n  const [loadingClass,setLoadingClass] = useState('hide')\r\n  return (\r\n    <>\r\n\r\n      <Router>\r\n      <Loading Class={loadingClass}></Loading>\r\n     <Switch>\r\n\r\n        <AuthProvider>\r\n          <UserProvider>\r\n        <LogsNavigationProvider>\r\n        <ProfileNavStateProvider>\r\n        \r\n        <Switch>\r\n        <Route path=\"/signin\">\r\n          <Login ></Login>\r\n        </Route>\r\n     <Route path=\"/signup\">\r\n          <Register></Register>\r\n        </Route>\r\n      <Route path=\"/\" exact component={Home}></Route>\r\n\r\n        </Switch>\r\n\r\n\r\n        <Switch>\r\n          \r\n        <Route path=\"/dashboard/logs\">\r\n          <TravelLogs setLoadingClass = {setLoadingClass}>\r\n          </TravelLogs>\r\n        </Route>\r\n      <Route path=\"/dashboard/profile\">\r\n        <Profile></Profile>\r\n      </Route>\r\n        <Route path=\"/dashboard\" >\r\n          <Header></Header>\r\n          <Dashboard setLoadingClass={setLoadingClass}></Dashboard>\r\n        </Route>\r\n\r\n        </Switch>\r\n       \r\n        </ProfileNavStateProvider>\r\n        </LogsNavigationProvider>\r\n    <Switch>\r\n        <Route path=\"/org/scanner\">\r\n          <Header></Header>\r\n          <Scanner >\r\n          </Scanner>\r\n        </Route>\r\n        <Route path=\"/org\" >\r\n          <ScannerLogin >\r\n          </ScannerLogin>\r\n        </Route>\r\n      </Switch>\r\n    <Switch>\r\n      \r\n      <ReportsNavigationProvider>\r\n      <LogsNavigationProvider>   \r\n\r\n      <Route path=\"/admin/reports\">\r\n            <Reports setLoadingClass={setLoadingClass}></Reports>\r\n          </Route>\r\n\r\n      <Route path=\"/admin/dashboard\">\r\n          <Header></Header>\r\n          <AdminDashboard>\r\n          </AdminDashboard>\r\n          </Route>\r\n\r\n      <Route path=\"/admin/logs\" >\r\n          <Logs setLoadingClass={setLoadingClass}></Logs>\r\n        </Route>  \r\n\r\n        <Route path=\"/admin\">\r\n          <AdminLogin>\r\n          </AdminLogin>\r\n          </Route>\r\n\r\n        </LogsNavigationProvider>  \r\n       </ReportsNavigationProvider>\r\n       </Switch>\r\n          </UserProvider>\r\n        </AuthProvider>\r\n        \r\n  </Switch>\r\n\r\n      </Router>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}